module.exports = {

  friendlyName: 'Get access token',
  description: 'Generate a new access token for acting on behalf of a particular SoundCloud user account.',
  extendedDescription: 'Note that you must first have a valid `code` from the user proving that they\'re OK with this.\nYou can get a code by redirecting the user to the url generated by calling the `getLoginUrl(...)` machine.',
  cacheable: true,

  inputs: {
    clientId: {
      example: 'cb4917402e7e92b3908cfaf84f52fe45',
      description: 'The unique identifier for your Soundcloud app  (i.e. this is the "Client ID" listed on your app\'s dashboard page in the SoundCloud developer portal, e.g. http://soundcloud.com/you/apps)',
      required: true
    },
    clientSecret: {
      example: 'd0db89af37eef3185a29f0acfed46a9f',
      description: 'The developer "secret" for your SoundCloud app (i.e. this is the "Client Secret" listed on your app\'s dashboard page in the SoundCloud developer portal)',
      required: true
    },
    grantType: {
      example: ["authorization_code"],
      description: 'The OAuth `code` generated by SoundCloud and sent to the `callbackUrl` if the user chooses to grant your app the requested permissions',
      required: false
    },
    code: {
      example: 'AQDvCav5zRSafS795TckAerUV53xzgqRyrcfYX2i',
      description: 'The OAuth `code` generated by SoundCloud and sent to the `callbackUrl` if the user chooses to grant your app the requested permissions',
      required: true
    },
    callbackUrl: {
      example: 'http://localhost:1337/auth/soundcloud/callback',
      description: 'The redirect URL that was used when generating the provided `code`',
      required: true
    }
  },

  defaultExit: 'success',
  catchallExit: 'error',

  exits: {
    error: {
      description: 'Triggered when the Facebook API returns an error (i.e. a non-2xx status code)'
    },
    success: {
      description: 'Returns the access token itself, as well as the timestamp when it expires (as a ISO/JSON date)',
      example: {
        token: 'CA2Emk9XsJUIBAHB9sTF5rOdNmAXTDjiHxZaZC1GYtFZCcdYGVnLYZB7jZCvensIpGc22yEzN6CL6wtQ9LPVXTNkuP6eQoUQ0toEVPrmTTqDpj0POijBpsuZBnx7jrZCHaTw8leiZBn0R8u6gZAYZAuD77cA3tnDMYvHhrl42CnljROeC9maWoa5zbsT2TZBXdL9wEuGQDSxKqRPyajRw3P3HEK',
        expires: '2014-11-20T20:34:26.632Z'
      }
    }
  },

  fn: function(inputs, exits) {

    var request = require('request');

    request.post({
      url: 'https://api.soundcloud.com/oauth2/token',
      json: {
        client_id: inputs.clientId,
        client_secret: inputs.clientSecret,
        grant_type: inputs.grantType || 'authorization_code',
        code: inputs.code,
        redirect_uri: inputs.callbackUrl
      },
      headers: {}
    }, function(err, response, body) {
        if (err) {
          return exits.error(err);
        }

        if (response.statusCode > 299 || response.statusCode < 200) {
          return exits.error(response.statusCode);
        }

        // Parse AccessToken from the response body
        try {
          var data = JSON.parse(body);

          var accessToken = data.access_token;
          return exits.success({ token: accessToken });
        }
        catch (e) {
          return exits.error(e);
        }
    });
  }
};
